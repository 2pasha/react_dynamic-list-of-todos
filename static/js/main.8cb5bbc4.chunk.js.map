{"version":3,"sources":["types/Status.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Status","TodoList","todos","selectedTodo","setSelectedTodo","className","map","todo","id","completed","title","type","onClick","TodoFilter","setFilterStatus","query","setQuery","onChange","event","target","value","ALL","ACTIVE","COMPLETED","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","onClose","useState","user","setUser","loading","setLoading","useEffect","userId","u","catch","error","Error","message","finally","href","email","name","App","setTodos","filterStatus","visibleTodos","useMemo","filter","goodTodo","toLowerCase","trim","includes","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8cb5bbc4.chunk.js","sourcesContent":["export enum Status {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n","import React from 'react';\n\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodo: Todo | null;\n  setSelectedTodo: (todo: Todo) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  setSelectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          data-cy=\"todo\"\n          key={todo.id}\n          className={selectedTodo === todo ? 'has-background-info-light' : ''}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p\n              className={\n                todo.completed ? 'has-text-success' : 'has-text-danger'\n              }\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => setSelectedTodo(todo)}\n            >\n              <span className=\"icon\">\n                <i\n                  className={\n                    selectedTodo === todo ? 'far fa-eye-slash' : 'far fa-eye'\n                  }\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import React from 'react';\nimport { Status } from '../../types/Status';\n\ntype Props = {\n  setFilterStatus: (status: Status) => void;\n  query: string;\n  setQuery: (query: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  setFilterStatus,\n  query,\n  setQuery,\n}) => {\n  const handleFilterStatus = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setFilterStatus(event.target.value as Status);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select data-cy=\"statusSelect\" onChange={handleFilterStatus}>\n            <option value={Status.ALL}>All</option>\n            <option value={Status.ACTIVE}>Active</option>\n            <option value={Status.COMPLETED}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={event => setQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json())\n    .then(todos => todos);\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\n\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ntype Props = {\n  todo: Todo;\n  onClose: () => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  todo,\n  onClose,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n\n    getUser(todo.userId)\n      .then(u => setUser(u))\n      .catch(error => {\n        throw new Error(error.message);\n      })\n      .finally(() => setLoading(false));\n  }, [todo.userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onClose}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed\n                ? (<strong className=\"has-text-success\">Done</strong>)\n                : (<strong className=\"has-text-danger\">Planned</strong>)}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useState, useEffect, useMemo } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { Status } from './types/Status';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [filterStatus, setFilterStatus] = useState(Status.ALL);\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    setLoading(true);\n\n    getTodos()\n      .then(setTodos)\n      .catch(error => {\n        throw new Error(error.message);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, []);\n\n  const visibleTodos = useMemo(() => {\n    return todos.filter(todo => {\n      const goodTodo = todo.title.toLowerCase().trim().includes(\n        query.toLowerCase().trim(),\n      );\n\n      switch (filterStatus) {\n        case Status.ALL:\n          return goodTodo;\n\n        case Status.ACTIVE:\n          return goodTodo && !todo.completed;\n\n        case Status.COMPLETED:\n          return goodTodo && todo.completed;\n\n        default:\n          throw new Error('Incorrect status');\n      }\n    });\n  }, [todos, filterStatus, query]);\n\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  const handleCloseTodo = () => {\n    setSelectedTodo(null);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setFilterStatus={setFilterStatus}\n                query={query}\n                setQuery={setQuery}\n              />\n              {selectedTodo?.id}\n            </div>\n\n            <div className=\"block\">\n              {loading && (\n                <Loader />\n              )}\n\n              {!loading && todos.length > 0 && (\n                <TodoList\n                  todos={visibleTodos}\n                  selectedTodo={selectedTodo}\n                  setSelectedTodo={setSelectedTodo}\n                />\n              )}\n\n              {!loading && todos.length === 0 && (\n                <p>No todos</p>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal todo={selectedTodo} onClose={handleCloseTodo} />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}